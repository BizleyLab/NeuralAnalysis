classdef NeuralAnalysis < ggraph
    % Nerual analysis methods
    % PSTH
    
    properties
    end
    
    methods
        function obj = NerualAnalysis()
            
            % Add 0.3 colour to colours
            colours = linspecer(6);
            colours = [0.3, 0.3, 0.3; colours];
            
            % Prepare figInfo
            figWidth = 1024;
            figHeight = 768;
            rect = [0 20 figWidth figHeight+20];
            colours = linspecer(6);
            validCondTits = {...
                'All data', ...
                'Auditory only (single)', ...
                'Visual only (single)', ...
                'AV sync (matched)', ...
                'AV async (matched)', ...
                'AV async (vis bonus)', ...
                'AV async (aud bonus)', ...
                'AV async (conflict)' ...
                };
            validCondTitsComp = {...
                'All', ...
                'A', ...
                'V', ...
                'AVsync', ...
                'AVasync', ...
                'VBonus', ...
                'ABonus', ...
                'Conflict' ...
                };
            validCondTitsAlt = {...
                'All data', ...
                'Auditory only', ...
                'Visual only', ...
                'AV sync', ...
                'AV async', ...
                'V bonus', ...
                'A bonus', ...
                'AV async (conflict)' ...
                };
            
            % Package to pass to functions later
            % File name string - before passing
            obj.figInfo.rect = rect; % Figure position/size
            obj.figInfo.colours = colours; % Colours to used in plot
            obj.figInfo.validCondTits = validCondTits; % Titles
            obj.figInfo.validCondTitsComp = validCondTitsComp;
            obj.figInfo.validCondTitsAlt = validCondTitsAlt;
            obj.figInfo.fName = ''; % Subject Name
            obj.figInfo.fns = ''; % Graph file name
            obj.figInfo.titleAppend = ''; % Add this to plot title
        end
        
    end
    
    methods (Static)
        
        [evPerEp, OK, survivedTest, h] = epochCheck(spikes, plotOn)
        
        data = PSTH(epochedData, behavTimes)
        
    end
    
end